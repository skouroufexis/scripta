{"remainingRequest":"/Users/stavros/Documents/web/diary/scripta/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stavros/Documents/web/diary/scripta/src/components/Users.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/stavros/Documents/web/diary/scripta/src/components/Users.vue","mtime":1615310085574},{"path":"/Users/stavros/Documents/web/diary/scripta/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/scripta/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/scripta/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/scripta/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/scripta/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgIG1haW4gewogICAgYm9yZGVyOiBzb2xpZCB3aGl0ZXNtb2tlIHRoaW47CiAgICBwYWRkaW5nOiAyJTsgICAgICAgICAgICAKfQoKCi51c2Vyc19sYWJlbHsKICAgIG1hcmdpbi10b3A6IDElOwp9CgojZmllbGRzQ29udGFpbmVyewogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDEzOSwgMTM5LDAuMSk7CiAgICBwYWRkaW5nLXRvcDogMiU7CiAgICBwYWRkaW5nLWJvdHRvbTogMiU7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoKI2J1dHRvblBhc3N3b3JkTW9kYWx7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMTM5LCAxMzksMCk7CiAgICBoZWlnaHQ6IDQwcHg7CiAgICB3aWR0aDogYXV0bzsKICAgIG1hcmdpbi1sZWZ0OiAwOwogICAgZGlzcGxheTogbm9uZTsKfQogICAKI2VkaXRDb250YWluZXIsI3VwZGF0ZUNvbnRhaW5lciwjZGVsZXRlQ29udGFpbmVyIHsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgbWFyZ2luLXRvcDogMSU7CiAgICAKfQoKI2VkaXRDb250YWluZXJ7bWFyZ2luLXRvcDogMyU7fQoKI3VzZXJzX3VwZGF0ZXsKICAgIGRpc3BsYXk6IG5vbmU7CiAgICB3aWR0aDogNTAlOwp9CgojdXNlcnNfY2FuY2VsIHsKICAgIGNvbG9yOiBibGFjazsKICAgIGRpc3BsYXk6IG5vbmU7Cn0KI2JhY2tDb250YWluZXJ7CiAgICBtYXJnaW4tdG9wOiAyJTsKICAgIAogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Cn0KCiN1c2Vyc19kZWxldGUgewogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgICBjb2xvcjogcmVkOwogICAgYm9yZGVyOiBzb2xpZCByZWQgdGhpbjsKICAgIGJveC1zaGFkb3c6IG5vbmU7Cgp9CgojcGFzc3dvcmRNb2RhbHsKICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgei1pbmRleDogMTsgICAgIAogICAgIGhlaWdodDogMTAwJTsKICAgICB3aWR0aDogMTAwJTsKICAgICBkaXNwbGF5OiBub25lOwogICAgIG9wYWNpdHk6IDA7ICAgICAgICAKICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAgICAKICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgICAgCiAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpOwogICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4ycyx0cmFuc2Zvcm0gMC4yczsgICAgICAgCn0KCiNwYXNzd29yZE1vZGFsIC5yb3d7CiAgICAKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgCn0KCiNuZXdQYXNzd29yZENvbnRhaW5lciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMTM5LCAxMzksMC4xKTsKICAgIHBhZGRpbmc6IDIlOwogICAgCn0KCiNidXR0b25fdXBkYXRlUGFzc3dvcmR7CiAgICBtYXJnaW4tdG9wOiAyJTsKICAgIG1hcmdpbi1ib3R0b206IDElOwp9CgoK"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n    <div>\n\n        <div  id=\"passwordModal\">\n            <div class=\"container\" id=\"newPasswordContainer\">\n                <div class=\"row\">\n                    <p>Password change</p>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col\" for=\"oldPassword\">Old password\n                    <input type=\"text\" id=\"oldPassword\" maxlength=\"20\">\n                    </label>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col\" for=\"newPassword1\">New password\n                    <input type=\"text\" id=\"newPassword1\"  maxlength=\"20\">\n                    </label>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col\" for=\"newPassword2\">Repeat new password\n                    <input type=\"text\" id=\"newPassword2\" maxlength=\"20\" disabled>\n                    </label>\n                </div>\n\n\n            </div>\n\n            <div class=\"row\">\n                <button class=\"col-10 button_primary\" id=\"button_updatePassword\" v-on:click='updatePassword'>Modify password</button>\n            </div>\n            \n            <div class=\"row\">\n                <button v-on:click='closePasswordModal'>cancel</button>\n            </div>\n            \n        </div>\n\n\n        <main id=\"Users\" class=\"container\">\n            <div class=\"container top2\">\n                \n              <div class=\"row\" id=\"fieldsContainer\">\n                  <label class=\"col-12 users_label\" for=\"users_username\">Username\n                      <input class=\"input\" type=\"text\" id=\"users_username\" disabled>\n                  </label>\n    \n                  <label class=\"col-12 users_label\" for=\"users_email\">Email\n                      <input class=\"input\" type=\"text\" id=\"users_email\" disabled>\n                   </label>\n    \n                   <button class=\"col-11\" id=\"buttonPasswordModal\" v-on:click='openPasswordModal'>Modify password</button>                                  \n              </div>\n    \n              <div class=\"row\" id=\"editContainer\">\n                  <button class=\"col-10 top2 button_primary\" id=\"users_edit\" v-on:click='enableEdit'>Edit</button>\n              </div>\n    \n              <div class=\"row\" id=\"updateContainer\">\n                  <button class=\"col-10 button_primary\" id=\"users_update\" v-on:click='updateInfo'>Update</button>\n                  <button class=\"col-10\" id=\"users_cancel\" v-on:click='cancel'>Cancel</button>\n              </div>\n    \n              <div class=\"row\" id=\"deleteContainer\">\n                  <button class=\"col-10 button_primary \" id=\"users_delete\" v-on:click='deleteAccount' >Delete account</button>\n              </div>\n    \n              <div class=\"row\" id=\"backContainer\">\n                  <button class=\"col-6\" id=\"users_back\" v-on:click='goBack'>Back</button>\n              </div>  \n                \n            </div>\n        </main>   \n    </div> \n</template>\n\n\n<script>\nexport default {\n    name:'Users',\n\n    data:function(){\n        return{\n           //\n        }\n    },\n\n    mounted:function(){\n\n        let inputs=document.getElementsByTagName('input');\n        inputs.forEach(i=>{\n            i.addEventListener('keyup',function(){\n                i.classList.remove('focus');\n                if(i===inputs[1]){\n                     let password1=document.getElementById('newPassword1').value;            \n                     let password2=document.getElementById('newPassword2');\n\n                    if(password1.length>=8){\n                        password2.disabled=false;\n                        \n                    }\n                    else{\n                        password2.disabled=true;\n                        password2.value='';\n                        password2.classList.remove('focus');\n                        \n                    }\n                }\n            })\n        })\n\n        //GET request to retrieve user account info\n        let request= new XMLHttpRequest();    \n        \n        let session_id=localStorage.getItem('session_id');\n        let user_id=localStorage.getItem('user_id');\n\n        request.open('GET','https://scripta-app.herokuapp.com/api/account');        \n\n        //set session_id header        \n        if(session_id){\n            request.setRequestHeader('session_id', session_id);\n            request.setRequestHeader('user_id', user_id);               \n        }\n\n        //send request\n        request.send();  \n\n        request.onload=function(){\n            if(this.status==200){\n                let response=JSON.parse(this.responseText);\n                    let user_name=response.user_name;\n                    let user_email=response.user_email;\n                    // let user_password=response.user_password;\n                    //     user_password=user_password.substr(0,3);\n                        \n                document.getElementById('users_username').value=user_name\n                document.getElementById('users_email').value=user_email;\n                // document.getElementById('password').innerHTML=user_password;\n            } \n            else{\n                 //   \n            }  \n        }  \n\n\n        \n    },\n\n\n    methods:{\n\n        enableEdit:function(){\n            let inputs =document.getElementsByClassName('input');\n            inputs.forEach(i => {\n                i.disabled=false;                \n            });\n\n            document.getElementById('users_update').style.display='block';\n            document.getElementById('users_cancel').style.display='block';\n            document.getElementById('buttonPasswordModal').style.display='block';\n            document.getElementById('users_edit').style.display='none';\n            document.getElementById('users_delete').style.display='none';\n            document.getElementById('users_back').style.display='none';\n\n        },\n        cancel:function(){\n            let inputs =document.getElementsByClassName('input');\n            inputs.forEach(i => {\n                i.disabled=true;                \n            });\n\n            document.getElementById('users_update').style.display='none';\n            document.getElementById('users_cancel').style.display='none';\n            document.getElementById('buttonPasswordModal').style.display='none';\n            document.getElementById('users_edit').style.display='block';\n            document.getElementById('users_delete').style.display='block';\n            document.getElementById('users_back').style.display='block';\n            \n        },\n        deleteAccount:function(){\n            let self=this;\n            let ans= window.confirm('Are you sure you want to delete your account?');\n            if(ans==true){\n\n                let confirmPassword =prompt('Please enter your password','');\n                \n                let session_id=localStorage.getItem('session_id');\n                let user_id=localStorage.getItem('user_id');\n                \n                let url='https://scripta-app.herokuapp.com/api/delete-user';\n                let request=new XMLHttpRequest();\n                \n                request.open('DELETE',url);\n                request.setRequestHeader('session_id', session_id);               \n                            \n                let data=JSON.stringify({user_id:user_id,user_password:confirmPassword});\n                request.send(data);                  \n\n                request.onload = function (){        \n                                                                            \n                        if(this.status==200){ //request is valid\n                            alert(this.responseText);\n                            self.logout();\n                        \n                        }\n                        else{\n                            alert(this.responseText);\n                        }                    \n                };\n\n\n            }\n        },\n\n        openPasswordModal:function(){\n            \n            let modal=document.getElementById('passwordModal');\n            // document.getElementById('Footer').style.display='none';\n            document.getElementById('Header').style.display='none';\n            let main = document.getElementsByTagName('main');\n                main[0].style.display='none';\n\n            modal.style.display='flex';\n        \n            setTimeout(() => {\n                modal.style.opacity='1';\n                modal.style.transform='translateY(0px)';\n\n            }, 100);\n            \n        },\n        closePasswordModal:function(){\n\n\n            let modal=document.getElementById('passwordModal');\n            modal.style.opacity='0';\n            modal.style.transform='translateY(20px)';\n            \n            \n        \n            setTimeout(() => {\n                modal.style.display='none';                \n                document.getElementById('Header').style.display='flex';\n                let main = document.getElementsByTagName('main');\n                main[0].style.display='flex';\n                \n            }, 100);\n            \n        },\n        updateInfo:function(){\n            let user_name=document.getElementById('users_username').value;\n            let user_email=document.getElementById('users_email').value;\n\n            try{\n                //empty input\n                if(user_name.trim()==''){\n                    this.setFocus(4);\n                    throw 'Please enter your username';\n                \n                }\n                if(user_email.trim()==''){\n                    this.setFocus(5);\n                    throw 'Please enter a valid email address';\n                }\n                else{\n                    //validate email format\n                    let emailValidator=require('email-validator');\n                    let isValid=emailValidator.validate(user_email);\n                    if(isValid==false){\n                        this.setFocus(5);\n                        throw 'Please enter a valid email address';\n                    }\n                }\n                let url='https://scripta-app.herokuapp.com/api/update-info';\n                let user_id=localStorage.getItem('user_id');                \n                let session_id=localStorage.getItem('session_id');\n                let userData={user_name:user_name,user_email:user_email};                \n                this.sendUpdateRequest(url,user_id,userData,session_id,1);    \n\n\n            }catch(e){\n                alert(e);\n            }\n            \n\n\n\n        },\n        updatePassword:function(){\n            let oldPassword=document.getElementById('oldPassword').value;                \n            let password1=document.getElementById('newPassword1').value;\n                password1=password1.trim();\n            let password2=document.getElementById('newPassword2').value;\n                password2=password2.trim();\n\n            try{\n\n                if(oldPassword.trim()==''){\n                    this.setFocus(1);    \n                    throw 'Please enter a valid password';\n                }\n\n                if(oldPassword.length<8){\n                    this.setFocus(1);\n                    throw 'Password must be between 8 and 20 characters long';\n                }\n\n                if(oldPassword.indexOf(' ')>=0){\n                        this.setFocus(1);\n                        throw 'Password cannot contain empty spaces';\n                }\n\n                if(password1.trim()==''){\n                        this.setFocus(2);    \n                        throw 'Please enter a valid password';\n                }\n                if(password1.length<8){\n                        this.setFocus(2);\n                        throw 'Password must be between 8 and 20 characters long';\n                }\n                \n                if(password1.indexOf(' ')>=0){\n                        this.setFocus(2);\n                        throw 'Password cannot contain empty spaces';\n                }\n                if(password1!=password2){\n                        this.setFocus(3);\n                        throw 'Passwords do not match. Please re-enter your new password';\n                }\n                \n                //send post request to authenticate password\n                 let self=this;\n                 let user_id=localStorage.getItem('user_id');\n             \n                 let request=new XMLHttpRequest();\n                \n                 request.open('POST','https://scripta-app.herokuapp.com/api/validate_password');\n                 request.setRequestHeader('Content-Type','application/json');\n                 let data=JSON.stringify({oldPassword:oldPassword,user_id:user_id});\n                 request.send(data);                  \n                    \n\n                 request.onload = function (){                                          \n                 let response=this.responseText;                \n                    if(this.status==200){ //request is valid\n                        console.log(response);                        \n                        \n                       \n                        //send put request for updating password\n                        let session_id=localStorage.getItem('session_id');\n                        \n                        let requestUrl='https://scripta-app.herokuapp.com/api/update_password';\n                        self.sendUpdateRequest(requestUrl,user_id,password1,session_id,2);    \n\n                    }\n                    else{\n                        console.log(response);\n                        alert('The password provided does not match the one stored in the database! Please re-enter your old password.');\n                        self.setFocus(1);\n                    }   \n                 };\n                               \n            }\n            catch(error){\n                alert(error);\n            }\n            \n        },\n        \n\n        //function to set focus to input fields that weren't completed properly\n        setFocus:function(n){\n            \n            let userEntries=document.getElementsByTagName('input');\n            userEntries.forEach(u=>{\n                u.classList.remove('focus');\n            });\n            userEntries[n-1].classList.add('focus');\n        },\n        sendUpdateRequest:function(url,user_id,userData,session_id,n){\n            //n=1-->update username & email, n=2-->update password\n            let self=this;\n            let data;\n            let request=new XMLHttpRequest();                \n            request.open('PUT',url);\n            request.setRequestHeader('session_id', session_id);\n            \n            if(n==1){\n                data=JSON.stringify({user_id:user_id, \n                                    user_name:userData.user_name,\n                                    user_email:userData.user_email});\n            }\n            else{\n                data=JSON.stringify({user_id:user_id,user_password:userData});  \n            }\n            \n            request.send(data);      \n            if(n==1){\n                request.onload = function (){        \n                                               \n                    if(this.status==200){ //request is valid                    \n                        alert(this.responseText);   \n                                             \n                        self.cancel();\n\n                    }\n                    else{\n                        alert(this.responseText);        \n                    }                    \n                }; \n            }   \n            else{\n                request.onload = function (){        \n                                               \n                    if(this.status==200){ //request is valid                    \n                        alert(this.responseText);   \n                        //empty text boxes\n                        document.getElementById('oldPassword').value='' ;\n                        document.getElementById('newPassword1').value='' ;\n                        document.getElementById('newPassword2').value='' ;\n\n                        //redirect to account information page\n                        self.closePasswordModal();\n                        self.cancel();\n\n                    }\n                    else{\n                        alert(this.responseText);        \n                    }                    \n                };    \n\n            }         \n            \n        },\n\n        navigate:function(n,sectionTitle){\n            \n            this.$emit('navigate',n,sectionTitle);\n        },\n\n        goBack:function(){\n            \n            //this will flag that the navigation originates from the Users screen\n            //so that inside the navigate function, the code will not search\n            //for the footer buttons\n\n            // localStorage.setItem('Users','true');\n            \n            let previousSection=localStorage.getItem('previousSection');\n            let previousSectionTitle=localStorage.getItem('previousSectionTitle');            \n            this.$emit('initials');\n            this.navigate(previousSection,previousSectionTitle);\n        },\n\n        logout:function(){\n            \n            //send request to delete the session from the database\n                let self = this;\n                //get session_id from localStorage             \n                let session_id=localStorage.getItem('session_id');  \n                \n                let request=new XMLHttpRequest();            \n                request.open('GET','https://scripta-app.herokuapp.com/api/logout');        \n                //set session_id header        \n                if(session_id){\n                request.setRequestHeader('session_id', session_id);               \n                }\n                //send request\n                request.send();  \n                \n                request.onload=function(){\n                    \n                    if(this.status==200){\n                        \n                        //logout\n                        localStorage.clear();\n                        // self.closeMenu();\n                        \n                        setTimeout(() => {\n                        self.$emit('navigate',0,'');     \n                        }, 200);\n                    } \n                    else{\n                        console.log(this.responseText);                                                                            \n                    }  \n                } \n        }\n\n    },\n}\n</script>\n\n\n<style>\n\n   main {\n    border: solid whitesmoke thin;\n    padding: 2%;            \n}\n\n\n.users_label{\n    margin-top: 1%;\n}\n\n#fieldsContainer{\n    background-color: rgb(0, 139, 139,0.1);\n    padding-top: 2%;\n    padding-bottom: 2%;\n    justify-content: center;\n}\n\n#buttonPasswordModal{\n    background-color: rgb(0, 139, 139,0);\n    height: 40px;\n    width: auto;\n    margin-left: 0;\n    display: none;\n}\n   \n#editContainer,#updateContainer,#deleteContainer {\n    justify-content: center;\n    margin-top: 1%;\n    \n}\n\n#editContainer{margin-top: 3%;}\n\n#users_update{\n    display: none;\n    width: 50%;\n}\n\n#users_cancel {\n    color: black;\n    display: none;\n}\n#backContainer{\n    margin-top: 2%;\n    \n    justify-content: center;\n}\n\n#users_delete {\n    background-color: white;\n    color: red;\n    border: solid red thin;\n    box-shadow: none;\n\n}\n\n#passwordModal{\n     position: absolute;\n     z-index: 1;     \n     height: 100%;\n     width: 100%;\n     display: none;\n     opacity: 0;        \n     flex-direction: column;    \n     justify-content: center;    \n     transform: translateY(20px);\n     transition: opacity 0.2s,transform 0.2s;       \n}\n\n#passwordModal .row{\n    \n    justify-content: center;\n    \n}\n\n#newPasswordContainer {\n    background-color: rgb(0, 139, 139,0.1);\n    padding: 2%;\n    \n}\n\n#button_updatePassword{\n    margin-top: 2%;\n    margin-bottom: 1%;\n}\n\n\n</style>\n\n"]}]}
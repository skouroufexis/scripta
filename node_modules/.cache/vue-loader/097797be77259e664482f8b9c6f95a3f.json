{"remainingRequest":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stavros/Documents/web/diary/node_modules/vue-functional-calendar/src/components/Day.vue?vue&type=style&index=0&id=508c15a3&scoped=true&lang=scss&","dependencies":[{"path":"/Users/stavros/Documents/web/diary/node_modules/vue-functional-calendar/src/components/Day.vue","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudmZjLWRheSB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgLnRpbWVzIHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgdG9wOiAtNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDsNCiAgICBjb2xvcjogd2hpdGU7DQogICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgIHdpZHRoOiAxNXB4Ow0KICAgIHotaW5kZXg6IDIwOw0KICAgIGhlaWdodDogMTVweDsNCiAgICBsaW5lLWhlaWdodDogMTVweDsNCiAgICAmOmhvdmVyIHsNCiAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOTksIDAsIDApOw0KICAgIH0NCiAgfQ0KICAubnVtYmVyIHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgdG9wOiAtNXB4Ow0KICAgIHJpZ2h0OiBjYWxjKDUwJSArIDdweCk7DQogICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47DQogICAgY29sb3I6IHdoaXRlOw0KICAgIGZvbnQtc2l6ZTogMTBweDsNCiAgICBib3JkZXItcmFkaXVzOiA1MCU7DQogICAgd2lkdGg6IDE1cHg7DQogICAgei1pbmRleDogMzA7DQogICAgaGVpZ2h0OiAxNXB4Ow0KICAgIGxpbmUtaGVpZ2h0OiAxNXB4Ow0KICAgICY6aG92ZXIgew0KICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDk0LCAwKTsNCiAgICB9DQogIH0NCiAgLnRvb2xUaXAgew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICB0b3A6IC0yMHB4Ow0KICAgIGxlZnQ6IDA7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIG1heC13aWR0aDogMTA4cHg7DQogICAgd29yZC13cmFwOiBicmVhay13b3JkOw0KICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICB6LWluZGV4OiAyMDA7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDk0LCAwKTsNCiAgfQ0KfQ0K"},{"version":3,"sources":["Day.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Day.vue","sourceRoot":"node_modules/vue-functional-calendar/src/components","sourcesContent":["<template>\r\n  <div class=\"vfc-day\">\r\n    <div v-if=\"startActive\" class=\"vfc-base-start\"></div>\r\n    <div v-if=\"endActive\" class=\"vfc-base-end\"></div>\r\n    <span\r\n      v-if=\"!day.hideLeftAndRightDays\"\r\n      :class=\"getClassNames(day)\"\r\n      @click.self=\"$parent.$parent.clickDay(day, isDisabledDate)\"\r\n      @mouseover=\"dayMouseOver\"\r\n    >\r\n      <slot :week=\"week\" :day=\"day\">{{ day.day }}</slot>\r\n      <span v-if=\"timesShow\" @click=\"clearRange\" class=\"times\">&times;</span>\r\n      <span\r\n        v-if=\"numberShow\"\r\n        @mouseover=\"toolTip && (onNumber = true)\"\r\n        @mouseleave=\"onNumber = false\"\r\n        class=\"number\"\r\n        >{{ getDaysNumber }}\r\n        <div v-show=\"toolTip && onNumber\" class=\"toolTip\">\r\n          {{ toolTipTxt().join('&nbsp;') }}\r\n        </div>\r\n      </span>\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Day',\r\n  props: {\r\n    day_key: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    week: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    day: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    helpCalendar: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    fConfigs: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    calendar: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      toolTip: false,\r\n      onNumber: false\r\n      // toolTipTxt\r\n    }\r\n  },\r\n  computed: {\r\n    startActive() {\r\n      if (!this.fConfigs.isMultipleDateRange)\r\n        return (\r\n          (this.day.isDateRangeStart || this.day.isMouseToLeft) &&\r\n          !this.day.hideLeftAndRightDays\r\n        )\r\n\r\n      if (!''.inRange) this.inRangeInit()\r\n\r\n      const inAnyRange = this.day.date.inRange(this.calendar.multipleDateRange)\r\n\r\n      const lastElement = this.calendar.multipleDateRange[\r\n        this.calendar.multipleDateRange.length - 1\r\n      ]\r\n      if (!lastElement) return inAnyRange\r\n      const lastHasDayStart = ~this.calendar.multipleDateRange\r\n        .map(range => range.start)\r\n        .indexOf(this.day.date)\r\n      const lastHasDayEnd = ~this.calendar.multipleDateRange\r\n        .map(range => range.end)\r\n        .indexOf(this.day.date)\r\n\r\n      if (lastHasDayStart === lastHasDayEnd && lastHasDayEnd) return inAnyRange\r\n\r\n      if (\r\n        lastHasDayStart &&\r\n        ~lastHasDayStart > -1 &&\r\n        this.calendar.multipleDateRange[~lastHasDayStart].end\r\n      )\r\n        return lastHasDayStart || inAnyRange\r\n\r\n      if (!lastElement.start && !lastElement.end) {\r\n        return lastHasDayStart || inAnyRange\r\n      }\r\n      // console.log('lastElement')\r\n\r\n      return (\r\n        ((this.day.isDateRangeStart || this.day.isMouseToLeft) &&\r\n          !this.day.hideLeftAndRightDays) ||\r\n        inAnyRange\r\n      )\r\n    },\r\n    endActive() {\r\n      if (!this.fConfigs.isMultipleDateRange)\r\n        return (\r\n          (this.day.isDateRangeEnd || this.day.isMouseToRight) &&\r\n          !this.day.hideLeftAndRightDays\r\n        )\r\n\r\n      if (!''.inRange) this.inRangeInit()\r\n\r\n      const inAnyRange = this.day.date.inRange(this.calendar.multipleDateRange)\r\n\r\n      const lastElement = this.calendar.multipleDateRange[\r\n        this.calendar.multipleDateRange.length - 1\r\n      ]\r\n      if (!lastElement) return inAnyRange\r\n\r\n      const lastHasDayStart = ~this.calendar.multipleDateRange\r\n        .map(range => range.start)\r\n        .indexOf(this.day.date)\r\n      const lastHasDayEnd = ~this.calendar.multipleDateRange\r\n        .map(range => range.end)\r\n        .indexOf(this.day.date)\r\n\r\n      if (lastHasDayStart === lastHasDayEnd && lastHasDayEnd) return inAnyRange\r\n\r\n      if (lastHasDayEnd) return true\r\n\r\n      if (!lastElement.start && !lastElement.end) {\r\n        if (lastElement.start === lastElement.end) return false\r\n        return lastHasDayEnd\r\n      }\r\n      return (\r\n        ((this.day.isDateRangeEnd || this.day.isMouseToRight) &&\r\n          !this.day.hideLeftAndRightDays) ||\r\n        inAnyRange\r\n      )\r\n    },\r\n    numberShow() {\r\n      if (!this.fConfigs.isMultipleDateRange) return false\r\n\r\n      let endPos = this.calendar.multipleDateRange\r\n        .map(range => range.end)\r\n        .indexOf(this.day.date)\r\n      if (\r\n        ~endPos ||\r\n        ~this.calendar.multipleDateRange\r\n          .map(range => range.start)\r\n          .indexOf(this.day.date)\r\n      ) {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    timesShow() {\r\n      let res = this.calendar.multipleDateRange\r\n        ? ~this.calendar.multipleDateRange\r\n            .map(range => range.end)\r\n            .indexOf(this.day.date)\r\n        : -1\r\n      return this.fConfigs.isMultipleDateRange && res\r\n    },\r\n    getDaysNumber() {\r\n      const endPosFirst = this.calendar.multipleDateRange\r\n        .map(range => range.end)\r\n        .indexOf(this.day.date)\r\n      const startPosFirst = this.calendar.multipleDateRange\r\n        .map(range => range.start)\r\n        .indexOf(this.day.date)\r\n      const endPosLast = this.calendar.multipleDateRange\r\n        .map(range => range.end)\r\n        .lastIndexOf(this.day.date)\r\n      const startPosLast = this.calendar.multipleDateRange\r\n        .map(range => range.start)\r\n        .lastIndexOf(this.day.date)\r\n\r\n      this.toolTip =\r\n        endPosFirst !== endPosLast ||\r\n        startPosFirst !== startPosLast ||\r\n        (endPosFirst > -1 && startPosFirst > -1) ||\r\n        (startPosFirst > -1 && endPosFirst > -1)\r\n\r\n      if (this.toolTip) {\r\n        return 'Â·'\r\n      }\r\n\r\n      return (endPosFirst > -1 ? new Number(endPosFirst) : 0) || startPosFirst\r\n    }\r\n  },\r\n  methods: {\r\n    toolTipTxt() {\r\n      const numbers = []\r\n      const endArr = this.calendar.multipleDateRange.map(range => range.end)\r\n      const startArr = this.calendar.multipleDateRange.map(range => range.start)\r\n      let endIndex = 0\r\n      let startIndex = 0\r\n      let ind = endArr.indexOf(this.day.date, endIndex)\r\n      while (~endArr.indexOf(this.day.date, endIndex)) {\r\n        ind = endArr.indexOf(this.day.date, endIndex)\r\n\r\n        numbers.push(ind)\r\n        endIndex = ind + 1\r\n      }\r\n      ind = startArr.indexOf(this.day.date, startIndex)\r\n      while (~startArr.indexOf(this.day.date, startIndex)) {\r\n        ind = startArr.indexOf(this.day.date, startIndex)\r\n\r\n        numbers.push(ind)\r\n        startIndex = ind + 1\r\n      }\r\n      return numbers.sort((a, b) => a - b)\r\n    },\r\n    inRangeInit() {\r\n      //!!!!\\\\\r\n      const helpCalendar = this.helpCalendar\r\n      String.prototype.inRange = function(arr) {\r\n        let res = false\r\n        arr.forEach(el => {\r\n          const start = +helpCalendar.getDateFromFormat(el.start.split(' ')[0])\r\n          const end = +helpCalendar.getDateFromFormat(el.end.split(' ')[0])\r\n          const current = +helpCalendar.getDateFromFormat(this.split(' ')[0])\r\n          if (start === end) return\r\n          if (start && end) res = res || (start < current && current < end)\r\n        })\r\n        return res\r\n      }\r\n      //!!!!\\\\\r\n    },\r\n\r\n    clearRange() {\r\n      //$emit\r\n      const removeIndex = this.calendar.multipleDateRange.findIndex(\r\n        range => range.end === this.day.date\r\n      )\r\n      this.calendar.multipleDateRange.splice(removeIndex, 1)\r\n    },\r\n    dayMouseOver() {\r\n      this.$emit('dayMouseOver', this.day.date)\r\n    },\r\n    hasSlot(name = 'default') {\r\n      return (\r\n        !!this.$parent.$parent.$slots[name] ||\r\n        !!this.$parent.$parent.$scopedSlots[name]\r\n      )\r\n    },\r\n    isDisabledDate(date) {\r\n      let today = new Date()\r\n      today.setHours(0, 0, 0, 0)\r\n      let dateObj = this.helpCalendar.getDateFromFormat(date)\r\n\r\n      return (\r\n        this.fConfigs.disabledDates.includes(date) ||\r\n        (this.fConfigs.disabledDates.includes('beforeToday') &&\r\n          dateObj.getTime() < today.getTime()) ||\r\n        (this.fConfigs.disabledDates.includes('afterToday') &&\r\n          dateObj.getTime() > today.getTime())\r\n      )\r\n    },\r\n    getClassNames(day) {\r\n      let classes = []\r\n\r\n      if (!this.hasSlot('default')) {\r\n        classes.push('vfc-span-day')\r\n      }\r\n\r\n      // Disable days of week if set in configuration\r\n      let dateDay = this.helpCalendar.getDateFromFormat(day.date).getDay() - 1\r\n      if (dateDay === -1) {\r\n        dateDay = 6\r\n      }\r\n      let dayOfWeekString = this.fConfigs.dayNames[dateDay]\r\n      if (this.fConfigs.disabledDayNames.includes(dayOfWeekString)) {\r\n        day.hide = true\r\n        classes.push('vfc-cursor-not-allowed')\r\n      }\r\n\r\n      let date = this.helpCalendar.getDateFromFormat(day.date)\r\n      let today = new Date()\r\n      today.setHours(0, 0, 0, 0)\r\n      // Disabled dates\r\n      if (this.isDisabledDate(day.date)) {\r\n        classes.push('vfc-disabled')\r\n        classes.push('vfc-cursor-not-allowed')\r\n      }\r\n\r\n      if (this.fConfigs.limits) {\r\n        let min = this.helpCalendar\r\n          .getDateFromFormat(this.fConfigs.limits.min)\r\n          .getTime()\r\n        let max = this.helpCalendar\r\n          .getDateFromFormat(this.fConfigs.limits.max)\r\n          .getTime()\r\n\r\n        if (date.getTime() < min || date.getTime() > max) {\r\n          classes.push('vfc-disabled')\r\n          classes.push('vfc-cursor-not-allowed')\r\n        }\r\n      }\r\n\r\n      if (day.hide) {\r\n        classes.push('vfc-hide')\r\n      }\r\n\r\n      // Today date\r\n      if (day.isToday) {\r\n        classes.push('vfc-today')\r\n      }\r\n      if (\r\n        !day.hideLeftAndRightDays &&\r\n        !this.fConfigs.disabledDayNames.includes(dayOfWeekString)\r\n      ) {\r\n        // Mark Date\r\n        if (day.isMarked) {\r\n          classes.push('vfc-marked')\r\n        } else if (day.isHovered) {\r\n          classes.push('vfc-hovered')\r\n        }\r\n        if (this.fConfigs.markedDates.includes(day.date)) {\r\n          classes.push('vfc-borderd')\r\n        }\r\n\r\n        if (Array.isArray(this.fConfigs.markedDateRange)) {\r\n          this.fConfigs.markedDateRange.forEach(range => {\r\n            if (\r\n              this.helpCalendar.getDateFromFormat(range.start) <=\r\n                this.helpCalendar.getDateFromFormat(day.date) &&\r\n              this.helpCalendar.getDateFromFormat(range.end) >=\r\n                this.helpCalendar.getDateFromFormat(day.date)\r\n            ) {\r\n              classes.push('vfc-marked')\r\n            }\r\n            if (day.date === range.start) {\r\n              classes.push('vfc-start-marked')\r\n            } else if (day.date === range.end) {\r\n              classes.push('vfc-end-marked')\r\n            }\r\n          })\r\n        } else if (\r\n          this.fConfigs.markedDateRange.start &&\r\n          this.fConfigs.markedDateRange.end\r\n        ) {\r\n          // Date Range Marked\r\n\r\n          if (\r\n            this.helpCalendar.getDateFromFormat(\r\n              this.fConfigs.markedDateRange.start\r\n            ) <= this.helpCalendar.getDateFromFormat(day.date) &&\r\n            this.helpCalendar.getDateFromFormat(\r\n              this.fConfigs.markedDateRange.end\r\n            ) >= this.helpCalendar.getDateFromFormat(day.date)\r\n          ) {\r\n            classes.push('vfc-marked')\r\n          }\r\n          if (day.date === this.fConfigs.markedDateRange.start) {\r\n            classes.push('vfc-start-marked')\r\n          } else if (day.date === this.fConfigs.markedDateRange.end) {\r\n            classes.push('vfc-end-marked')\r\n          }\r\n        } else {\r\n          // Only After Start Marked\r\n          if (this.fConfigs.markedDateRange.start) {\r\n            if (\r\n              this.helpCalendar.getDateFromFormat(\r\n                this.fConfigs.markedDateRange.start\r\n              ) <= this.helpCalendar.getDateFromFormat(day.date)\r\n            )\r\n              classes.push('vfc-marked')\r\n          }\r\n\r\n          // Only Before End Marked\r\n          if (this.fConfigs.markedDateRange.end) {\r\n            if (\r\n              this.helpCalendar.getDateFromFormat(\r\n                this.fConfigs.markedDateRange.end\r\n              ) >= this.helpCalendar.getDateFromFormat(day.date)\r\n            )\r\n              classes.push('vfc-marked')\r\n          }\r\n        }\r\n\r\n        classes.push('vfc-hover')\r\n      }\r\n      //Date Multiple Range\r\n      if (this.fConfigs.isMultipleDateRange) {\r\n        if (!''.inRange) this.inRangeInit()\r\n        // console.log(day.date.inRange(this.calendar.multipleDateRange))\r\n        if (\r\n          day.isMarked ||\r\n          ~this.calendar.multipleDateRange\r\n            .map(range => range.start.split(' ')[0])\r\n            .indexOf(day.date) ||\r\n          ~this.calendar.multipleDateRange\r\n            .map(range => range.end.split(' ')[0])\r\n            .indexOf(day.date) ||\r\n          day.date.inRange(this.calendar.multipleDateRange)\r\n        ) {\r\n          classes.push('vfc-marked')\r\n        }\r\n        // } else if (day.isHovered) {\r\n        // classes.push('vfc-hovered')\r\n        // }\r\n        if (this.fConfigs.markedDates.includes(day.date)) {\r\n          classes.push('vfc-borderd')\r\n        }\r\n        // console.log(\r\n        //   ~this.calendar.multipleDateRange\r\n        //     .map(range => range.start)\r\n        //     .indexOf(day.date)\r\n        // )\r\n        if (\r\n          ~this.calendar.multipleDateRange\r\n            .map(range => range.start.split(' ')[0])\r\n            .indexOf(day.date)\r\n        ) {\r\n          classes.push('vfc-start-marked')\r\n        }\r\n\r\n        if (\r\n          ~this.calendar.multipleDateRange\r\n            .map(range => range.end.split(' ')[0])\r\n            .indexOf(day.date)\r\n        ) {\r\n          classes.push('vfc-end-marked')\r\n        }\r\n      }\r\n      // Date Mark With Custom Classes\r\n      if (typeof this.fConfigs.markedDates === 'object') {\r\n        let checkMarked = this.fConfigs.markedDates.find(markDate => {\r\n          return markDate.date === day.date\r\n        })\r\n\r\n        if (typeof checkMarked !== 'undefined') {\r\n          classes.push(checkMarked.class)\r\n        }\r\n      }\r\n\r\n      if (day.date === this.calendar.dateRange.start.split(' ')[0]) {\r\n        classes.push('vfc-start-marked')\r\n      }\r\n\r\n      if (day.date === this.calendar.dateRange.end.split(' ')[0]) {\r\n        classes.push('vfc-end-marked')\r\n      }\r\n\r\n      if (\r\n        day.date === this.calendar.selectedDate ||\r\n        (this.calendar.hasOwnProperty('selectedDates') &&\r\n          this.calendar.selectedDates.find(sDate => sDate.date === day.date))\r\n      ) {\r\n        classes.push('vfc-borderd')\r\n      }\r\n\r\n      return classes\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.vfc-day {\r\n  position: relative;\r\n  .times {\r\n    position: absolute;\r\n    top: -5px;\r\n    background-color: red;\r\n    color: white;\r\n    border-radius: 50%;\r\n    width: 15px;\r\n    z-index: 20;\r\n    height: 15px;\r\n    line-height: 15px;\r\n    &:hover {\r\n      cursor: pointer;\r\n      background-color: rgb(199, 0, 0);\r\n    }\r\n  }\r\n  .number {\r\n    position: absolute;\r\n    top: -5px;\r\n    right: calc(50% + 7px);\r\n    background-color: green;\r\n    color: white;\r\n    font-size: 10px;\r\n    border-radius: 50%;\r\n    width: 15px;\r\n    z-index: 30;\r\n    height: 15px;\r\n    line-height: 15px;\r\n    &:hover {\r\n      background-color: rgb(0, 94, 0);\r\n    }\r\n  }\r\n  .toolTip {\r\n    position: absolute;\r\n    top: -20px;\r\n    left: 0;\r\n    padding: 5px;\r\n    max-width: 108px;\r\n    word-wrap: break-word;\r\n    border-radius: 5px;\r\n    z-index: 200;\r\n    background-color: rgb(0, 94, 0);\r\n  }\r\n}\r\n</style>\r\n"]}]}
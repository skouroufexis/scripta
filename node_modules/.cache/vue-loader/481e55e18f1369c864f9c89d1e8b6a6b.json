{"remainingRequest":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stavros/Documents/web/diary/src/components/Index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/stavros/Documents/web/diary/src/components/Index.vue","mtime":1614283374431},{"path":"/Users/stavros/Documents/web/diary/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojc2VhcmNoYmFyQ29udGFpbmVyIHsKICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMiU7ICAgCiAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgICAgICAgICAgICAgICAgIH0KCiNzZWFyY2hiYXIgewogICAgICAgICAgICAKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDsKICAgICAgICAgICAgYm9yZGVyOnNvbGlkIGxpZ2h0Z3JleSB0aGluOwogICAgICAgICAgICB9CgoKCgoKCg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n    \n        <main id=\"Index\" class=\"container\">\n            <transition name=\"fade\">\n                <div v-if=\"!openNote\">\n                    <div class=\"container\">\n            \n                        <div class=\"row\" id=\"searchbarContainer\">\n                            <input class=\"col-12\" type=\"text\" id=\"searchbar\" placeholder=\"title\" v-on:keyup='queryNote'>\n                        </div>\n                        \n                        <div v-if=\"this.recentNotes==''\" class=\"row\" id=\"lastNoteContainer\">\n                            <div class=\"col-12 systemMessage  top2\" id=\"lastNote\">\n                               No recent notes found\n                            </div>\n                        </div>      \n        \n                        <div v-if=\"this.recentNotes!=''\">\n                            <div class=\"col-12 top1  systemMessage\">Your recent notes</div>\n                            <div v-for=\"recentNote in this.recentNotes\" :key=\"recentNote.note_id\" class=\"row record full\">\n                                <button class=\"col\"><i class=\"fas fa-feather-alt results_label full left\"> <span class=\"left2\">{{recentNote.title}} </span></i></button>\n                                <button class=\"col-2\" v-on:click=\"oNote(recentNote)\">open</button>\n                                <button class=\"col-2\" v-on:click='deleteNote(recentNote)'><i class=\"far fa-trash-alt\"></i> </button>\n                               \n                            </div>\n                        </div>          \n                    </div>\n                </div>\n            </transition>\n\n            <transition name=\"fade\">\n                <Note v-if=\"openNote\"\n                      v-bind:noteData='selectedNote'\n                      v-on:back_notes='back_notes'   \n                \n                 />\n            </transition>\n\n        </main>\n    \n\n</template>\n\n\n<script>\n\nimport Note from './Note';\nexport default {\n    name:'Index',\n\n    components: {\n    Note\n  },\n\n    data:function(){\n        return{\n           recentNotes:[],\n           selectedNote:[],\n           openNote:false\n        }\n    },\n\n    // props:[],\n\n    watch:{\n         recentNotes:function(newVal){\n               this.recentNotes=newVal;  \n               \n               \n         }, \n        //  dossier:function(newVal){\n        //        this.dossier=newVal;   \n               \n        //  },\n        //  tags:function(newVal){\n        //          this.new_tags=newVal;                 \n        //  },\n        \n    },\n\n    mounted:function(){\n    //get  3 most recent notes\n    this.getRecentNotes();\n    },\n\n    methods:{        \n        getRecentNotes:function(){\n            this.recentNotes=[];\n            let self= this;\n             \n\n            let request= new XMLHttpRequest();            \n            request.open('GET','http://localhost:8080/api/recent-notes');        \n\n            let session_id=localStorage.getItem('session_id');\n            let user_id=localStorage.getItem('user_id');\n\n            request.setRequestHeader('session_id', session_id);               \n            request.setRequestHeader('user_id', user_id);               \n\n            //send request\n            request.send();  \n\n            request.onload=function(){\n                if(this.status==200){\n                    let response=JSON.parse(this.responseText);\n                    self.recentNotes=response;\n                } \n                else{\n                     alert(this.responseText);\n                }  \n            }  \n\n\n        },\n\n        queryNote:function(){\n            this.recentNotes=[];\n            let self= this;\n            let query_input=document.getElementById('searchbar').value.trim();\n            \n            if(query_input!=''){\n\n                let request= new XMLHttpRequest();            \n                request.open('GET','http://localhost:8080/api/query-note');        \n\n                let session_id=localStorage.getItem('session_id');\n                let user_id=localStorage.getItem('user_id');\n                \n\n\n                request.setRequestHeader('session_id', session_id);               \n                request.setRequestHeader('user_id', user_id);               \n                request.setRequestHeader('query_input', query_input);               \n                //send request\n                request.send();  \n\n                request.onload=function(){\n                    if(this.status==200){\n                        let response=JSON.parse(this.responseText);\n                        self.recentNotes=response;\n                    } \n                    else{\n                        alert(this.responseText);\n                    }  \n                }  \n\n            }\n            else{\n                this.getRecentNotes();\n            }\n\n            \n        },\n        oNote:function(note){\n\n            this.selectedNote[0]=({note_id:note.note_id,title:note.title,body:note.body,date:note.date,time:note.time,dossier_fk:note.dossier_fk,user_fk:note.user_fk});\n            this.openNote=true;\n        },\n        deleteNote:function(note){\n            let self=this;\n            let del = confirm('Are you sure you want to delete this note?');\n            if(del==true){\n                \n            let request= new XMLHttpRequest();            \n            request.open('DELETE','http://localhost:8080/api/note');        \n\n            let session_id=localStorage.getItem('session_id');            \n            let data=JSON.stringify({note_id:note.note_id});            \n            request.setRequestHeader('session_id', session_id);                                           \n            //send request\n            request.send(data);  \n\n            request.onload=function(){\n                if(this.status==200){\n                    alert(this.responseText);\n                    self.getRecentNotes();\n                } \n                else{\n                    alert(this.responseText);        \n                }  \n            }        \n\n\n\n            }\n            \n        },\n        back_notes:function(){\n            this.openNote=false;\n            this.getRecentNotes();\n        }\n\n    },\n}\n</script>\n\n\n<style>\n\n\n\n#searchbarContainer {\n                     margin-top: 2%;   \n                     justify-content: center;\n                     text-align: left;\n                    }\n\n#searchbar {\n            \n            border-radius: 20px;\n            border:solid lightgrey thin;\n            }\n\n\n\n\n\n\n</style>"]}]}
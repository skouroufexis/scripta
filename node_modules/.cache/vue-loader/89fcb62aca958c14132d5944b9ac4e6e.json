{"remainingRequest":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stavros/Documents/web/diary/src/components/Dossier.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/stavros/Documents/web/diary/src/components/Dossier.vue","mtime":1614334417633},{"path":"/Users/stavros/Documents/web/diary/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stavros/Documents/web/diary/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRvc3NpZXJfcm93ewogICAgYm9yZGVyOiBzb2xpZCBkYXJrY3lhbiB0aGluOyAgICAKIH0K"},{"version":3,"sources":["Dossier.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0LA;AACA;AACA","file":"Dossier.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n    <main id=\"Dossier\" class=\"container\">\n        <transition name=\"fade\">\n            <div v-if=\"!openNotes && !editName\">\n                <div class=\"row justify-centre systemMessage\" v-if=\"!hasDossier\">You have no recent dossiers</div>\n                <div v-if=\"hasDossier\" >\n                    \n                    <div class=\"row results_row\" v-for=\"dossier in dossiers\" :key=\"dossier\">\n    \n                        <div class=\"col-1\">\n                            <i class=\"fas fa-folder full right results_label\"> </i>                        \n                        </div>\n    \n                        <div class=\"col-3 results_label\">\n                            {{dossier.dossier_name}}                       \n                        </div>\n    \n                        <div class=\"col-2\">\n                            <i class=\"fas fa-feather-alt results_label full left\"> {{dossier.count}} </i>                          \n                        </div>\n    \n                        <button class=\"col\" v-on:click='showNotes(dossier.dossier_id,dossier.dossier_name)'>open</button>\n                        <button class=\"col\" v-on:click='editNameOn(dossier.dossier_id,dossier.dossier_name)' ><i class=\"far fa-edit\"></i></button>\n                        <button class=\"col\" v-on:click='deleteDossier(dossier.dossier_id,dossier.dossier_name)'><i class=\"far fa-trash-alt\"></i> </button>\n                        \n                          \n                    </div>\n                </div>\n            </div>\n        </transition>\n            \n        <transition name=\"fade\">\n            <Notes  v-if=\"openNotes\" v-on:back_dossiers='back_dossiers' v-bind:dossier='selectedDossier' \n                   \n             />\n        </transition>\n\n        <transition name=\"down\">\n            <EditDossierName\n             v-if='editName'\n             v-on:backDossier='back_dossiers2'\n             v-bind:dossier='selectedDossier'\n            />\n        </transition>\n\n\n    </main>    \n\n</template>\n\n<script>\nimport Notes from './Notes';\nimport EditDossierName from './EditDossierName';\nexport default {\n    name:'Dossier',\n\n    components: {\n    Notes,EditDossierName\n    },\n\n    data:function(){\n        return{\n           dossiers:[],\n           hasDossier:true,\n           openNotes:false,\n           editName:false,\n           selectedDossier:[]\n           \n        }\n    },\n\n     watch:{\n         dossiers:function(newVal){\n               this.dossiers=newVal;                                \n               \n         }, \n        //  dossier:function(newVal){\n        //        this.dossier=newVal;   \n               \n        //  },\n        //  tags:function(newVal){\n        //          this.new_tags=newVal;                 \n        //  },\n        \n    },\n\n    mounted:function(){\n\n        this.getDossiers();\n        \n    },\n\n    methods:{\n\n        getDossiers:function(){\n            this.dossiers=[];\n            let self=this;\n            let request= new XMLHttpRequest();            \n            request.open('GET','/api/get-dossiers-info');\n            let session_id=localStorage.getItem('session_id');\n            let user_id=localStorage.getItem('user_id');\n            request.setRequestHeader('session_id', session_id);               \n            request.setRequestHeader('user_id', user_id);               \n            //send request\n            request.send();  \n            request.onload=function(){\n                if(this.status==200){\n                    if(this.responseText!=''){\n                        \n                        self.hasDossier=true;\n                        let response = JSON.parse(this.responseText);\n                        response.forEach(r => {\n                            self.dossiers.push(r);                           \n                        });\n                    }\n\n                } \n                else{\n                    console.log(this.responseText);\n                }  \n            }  \n        },\n       \n       showNotes:function(dossier_fk,dossier_name){\n           \n           this.selectedDossier=({dossier_fk:dossier_fk,dossier_name:dossier_name});\n           \n           this.openNotes=true;\n       },\n\n       editNameOn:function(dossier_id,dossier_name){\n           this.selectedDossier=({dossier_fk:dossier_id,dossier_name:dossier_name})\n           this.editName=true;\n           console.log(dossier_id + dossier_name);\n       },\n\n       back_dossiers:function(){\n           \n           this.openNotes=false;\n           this.dossiers=[];\n            this.getDossiers();\n            \n       },\n       back_dossiers2:function(){           \n           this.editName=false;\n           this.dossiers=[];\n           this.getDossiers();            \n       },\n\n\n       deleteDossier:function(dossier_id,dossier_name){\n           let self=this;\n           let del=confirm(`Are you sure you want to delete ${dossier_name} and all the notes included in it?`);\n           \n           if(del==true){\n\n              //send delete request\n              let session_id=localStorage.getItem('session_id');               \n              let request=new XMLHttpRequest();                \n              request.open('DELETE','http://localhost:8080/api/dossier');\n              request.setRequestHeader('session_id', session_id);\n              let data=JSON.stringify({dossier_fk:dossier_id});\n              request.send(data);                  \n\n              request.onload = function (){        \n                if(this.status==200){ //request is valid\n                    alert(this.responseText);\n                    self.getDossiers();\n                }\n                else{                        \n                    alert(this.responseText);\n                }                    \n             };\n           }\n           \n\n       },\n      \n\n    },\n}\n</script>\n\n\n<style>\n   .dossier_row{\n       border: solid darkcyan thin;    \n    }\n</style>"]}]}